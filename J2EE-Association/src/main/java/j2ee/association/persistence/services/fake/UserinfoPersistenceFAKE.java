/*
 * Created on 14 oct. 2013 ( Time 18:54:36 )
 * Generated by Telosys Tools Generator ( version 2.0.6 )
 */
package j2ee.association.persistence.services.fake;

import java.util.List;
import java.util.Map;

import j2ee.association.bean.Userinfo ;
import j2ee.association.persistence.commons.fake.GenericFakeService;
import j2ee.association.persistence.services.UserinfoPersistence;

/**
 * Fake persistence service implementation ( entity "Userinfo" )
 *
 * @author Telosys Tools Generator
 */
public class UserinfoPersistenceFAKE extends GenericFakeService<Userinfo> implements UserinfoPersistence {

	public UserinfoPersistenceFAKE () {
		super(Userinfo.class);
	}
	
	protected Userinfo buildEntity(int index) {
		Userinfo entity = new Userinfo();
		// Init fields with mock values
		entity.setUsId( nextInteger() ) ;
		entity.setUsPseudo( nextString() ) ;
		entity.setUsPassword( nextString() ) ;
		entity.setUsName( nextString() ) ;
		entity.setUsFirstname( nextString() ) ;
		entity.setUsAdress( nextString() ) ;
		entity.setUsPostcode( nextInteger() ) ;
		entity.setUsTown( nextString() ) ;
		entity.setUsCountry( nextInteger() ) ;
		return entity ;
	}
	
	
	public boolean delete(Userinfo entity) {
		log("delete ( Userinfo : " + entity + ")" ) ;
		return true;
	}

	public boolean delete( int usId ) {
		log("delete ( PK )") ;
		return true;
	}

	public void insert(Userinfo entity) {
		log("insert ( Userinfo : " + entity + ")" ) ;
	}

	public Userinfo load( int usId ) {
		log("load ( PK )") ;
		return buildEntity(1) ; 
	}

	public List<Userinfo> loadAll() {
		log("loadAll()") ;
		return buildList(40) ;
	}

	public List<Userinfo> loadByNamedQuery(String queryName) {
		log("loadByNamedQuery ( '" + queryName + "' )") ;
		return buildList(20) ;
	}

	public List<Userinfo> loadByNamedQuery(String queryName, Map<String, Object> queryParameters) {
		log("loadByNamedQuery ( '" + queryName + "', parameters )") ;
		return buildList(10) ;
	}

	public Userinfo save(Userinfo entity) {
		log("insert ( Userinfo : " + entity + ")" ) ;
		return entity;
	}

	public List<Userinfo> search(Map<String, Object> criteria) {
		log("search (criteria)" ) ;
		return buildList(15) ;
	}

}
