/*
 * Created on 7 oct. 2013 ( Time 12:34:12 )
 * Generated by Telosys Tools Generator ( version 2.0.6 )
 */
// This Bean has a basic Primary Key (not composite) 

package j2ee.association.bean;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;


import java.util.List;
import javax.persistence.*;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlTransient;

/**
 * Persistent class for entity stored in table "COMMAND"
 *
 * @author Telosys Tools Generator
 *
 */
@XmlRootElement  // JAXB annotation for REST Web Services
@XmlAccessorType(XmlAccessType.PROPERTY) // JAXB accessor = getter/setter pair
@Entity
@Table(name="COMMAND", schema="APP" )
// Define named queries here
// @NamedQueries ( {
//  @NamedQuery ( name="Command.query1", query="SELECT x FROM Command x WHERE  " ),
//  @NamedQuery ( name="Command.query2", query="SELECT x FROM Command x WHERE  " )
// } )
public class Command implements Serializable
{
    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="CO_ID", nullable=false)
    private int        coId         ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
	// "coUsId" (column "CO_US_ID") is not defined by itself because used as FK in a link 
	// "coArId" (column "CO_AR_ID") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name="CO_US_ID", referencedColumnName="US_ID", insertable=false, updatable=false)
    private Userinfo   userinfo    ;

    @ManyToOne
    @JoinColumn(name="CO_AR_ID", referencedColumnName="AR_ID", insertable=false, updatable=false)
    private Article    article     ;

    @OneToMany(mappedBy="command", targetEntity=Article.class)
    private List<Article> listOfArticle;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public Command()
    {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setCoId( int coId )
    {
        this.coId = coId ;
    }
    public int getCoId()
    {
        return this.coId;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setUserinfo( Userinfo userinfo )
    {
        this.userinfo = userinfo;
    }
    public Userinfo getUserinfo()
    {
        return this.userinfo;
    }

    public void setArticle( Article article )
    {
        this.article = article;
    }
    public Article getArticle()
    {
        return this.article;
    }

    @XmlTransient
    public void setListOfArticle( List<Article> listOfArticle )
    {
        this.listOfArticle = listOfArticle;
    }
    public List<Article> getListOfArticle()
    {
        return this.listOfArticle;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString()
    {
        StringBuffer sb = new StringBuffer(); 
        sb.append(coId); 
        sb.append("|"); 
        return sb.toString(); 
    }

}
