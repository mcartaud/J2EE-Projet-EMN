/*
 * Created on 7 oct. 2013 ( Time 10:21:01 )
 * Generated by Telosys Tools Generator ( version 2.0.6 )
 */
package org.demo.persistence.services.fake;

import java.util.List;
import java.util.Map;

import org.demo.bean.Catalogue ;
import org.demo.persistence.commons.fake.GenericFakeService;
import org.demo.persistence.services.CataloguePersistence;

/**
 * Fake persistence service implementation ( entity "Catalogue" )
 *
 * @author Telosys Tools Generator
 */
public class CataloguePersistenceFAKE extends GenericFakeService<Catalogue> implements CataloguePersistence {

	public CataloguePersistenceFAKE () {
		super(Catalogue.class);
	}
	
	protected Catalogue buildEntity(int index) {
		Catalogue entity = new Catalogue();
		// Init fields with mock values
		entity.setCaId( nextInteger() ) ;
		entity.setCaCode( nextString() ) ;
		entity.setCaName( nextString() ) ;
		entity.setCaPrice( nextDouble() ) ;
		entity.setCaStock( nextInteger() ) ;
		return entity ;
	}
	
	
	public boolean delete(Catalogue entity) {
		log("delete ( Catalogue : " + entity + ")" ) ;
		return true;
	}

	public boolean delete( int caId ) {
		log("delete ( PK )") ;
		return true;
	}

	public void insert(Catalogue entity) {
		log("insert ( Catalogue : " + entity + ")" ) ;
	}

	public Catalogue load( int caId ) {
		log("load ( PK )") ;
		return buildEntity(1) ; 
	}

	public List<Catalogue> loadAll() {
		log("loadAll()") ;
		return buildList(40) ;
	}

	public List<Catalogue> loadByNamedQuery(String queryName) {
		log("loadByNamedQuery ( '" + queryName + "' )") ;
		return buildList(20) ;
	}

	public List<Catalogue> loadByNamedQuery(String queryName, Map<String, Object> queryParameters) {
		log("loadByNamedQuery ( '" + queryName + "', parameters )") ;
		return buildList(10) ;
	}

	public Catalogue save(Catalogue entity) {
		log("insert ( Catalogue : " + entity + ")" ) ;
		return entity;
	}

	public List<Catalogue> search(Map<String, Object> criteria) {
		log("search (criteria)" ) ;
		return buildList(15) ;
	}

}
